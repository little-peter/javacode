给你一个长度为 n 的整数数组 nums 和 一个目标值 target。请你从 nums 中选出三个整数，使它们的和与 target 最接近。

返回这三个数的和。

假定每组输入只存在恰好一个解。

class Solution {
    public int threeSumClosest(int[] nums, int target) {
Arrays.sort(nums);
int closeNum=nums[0]+nums[1]+nums[2];
//i=2是内层循环的开始，为了保证最少有三个数
for(int i=0;i<nums.length-2;i++){
    int left=i+1;int right=nums.length-1;
    while(left<right){
        int threeSum=nums[right]+nums[left]+nums[i];
    if(Math.abs(threeSum-target)<Math.abs(closeNum-target)){
        closeNum=threeSum;
    }
    if(threeSum>target){
        right--;
    }else if(threeSum<target){
        left++;
    }else{
        // 如果已经等于target的话, 肯定是最接近的
        return target;
    }
    }
}
return closeNum;
    }
}