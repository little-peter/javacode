class Solution {
    public int[] nextLargerNodes(ListNode head) {
ListNode tail=reverse(head);
int []nums=new int[tail.val];
Deque<Integer>stack=new LinkedList<Integer>();
int index=tail.val-1;
tail=tail.next;
while(index>=0){
    while(!stack.isEmpty()&&tail.val>=stack.peek()){
        stack.poll();
    }
    nums[index--]=stack.isEmpty()?0:stack.peek();
    stack.push(tail.val);
tail=tail.next;
}
return nums;}


private ListNode reverse(ListNode head){
ListNode fuck=new ListNode(-1);
int count=0;
ListNode cur=head,pre=null;
while(cur!=null){
    ListNode temp=cur.next;
        cur.next=pre;
        pre=cur;
        cur=temp;
        count++;
}
fuck.val=count;
fuck.next=pre;
return fuck;
}


    }