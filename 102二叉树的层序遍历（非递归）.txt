
给你一个二叉树，请你返回其按 层序遍历 得到的节点值。 （即逐层地，从左到右访问所有节点）。


/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> res=new ArrayList<>();
if(root==null) return res;
Queue<TreeNode> queue=new LinkedList<>();
queue.offer(root);
while(!queue.isEmpty()){
int size=queue.size();
List<Integer>list=new ArrayList<>();//用来存放这一层
while(size>0){
    TreeNode cur=queue.poll();//定义临时节点
    list.add(cur.val);
    //添加下一层
    if(cur.left!=null){
        queue.offer(cur.left);
    }
    if(cur.right!=null){
        queue.offer(cur.right);
    }
    size--;
}
res.add(list);
}
return res;
    }
}