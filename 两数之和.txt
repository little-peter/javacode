给定一个整数数组 nums 和一个整数目标值 target，
请你在该数组中找出 和为目标值 target  的那 两个 整数，并返回它们的数组下标。

你可以假设每种输入只会对应一个答案。
但是，数组中同一个元素在答案里不能重复出现。

你可以按任意顺序返回答案。

class Solution {
    public int[] twoSum(int[] nums, int target) {
if(nums!=null){
    Map<Integer,Integer>map=new HashMap<>();
    for(int i=0;i<nums.length;i++){
        int tmp=target-nums[i];
        if(map.containsKey(tmp)){
            return new int[]{map.get(tmp),i};
        }else{
            map.put(nums[i],i);
        }
    }
    
}
return null;
    }
}
//    //哈希表
//     if(nums!=null){
//         Map<Integer,Integer> hashmap=new HashMap<>();
//         for (int i = 0; i < nums.length; i++) {
//                 int temp = target - nums[i];
//                 if (hashmap.containsKey(temp))
//                     return new int[]{hashmap.get(temp), i};
//                 else
//                     hashmap.put(nums[i], i);
//             }
//         }
//         return null;



// int []res=new int[2];
//  int length=nums.length;
//  for(int i=0;i<length;i++){
//      for(int j=i+1;j<length;j++){
// if(nums[i]+nums[j]==target){
//     res[0]=i;
//     res[1]=j;
//     break;
// }
//      }
//  }
//  return res;