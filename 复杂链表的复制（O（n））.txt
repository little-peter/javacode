请实现 copyRandomList 函数，复制一个复杂链表。在复杂链表中，
每个节点除了有一个 next 指针指向下一个节点，还有一个 random 指针指向链表中的任意节点或者 null。

来源：力扣（LeetCode）

class Solution {
    public Node copyRandomList(Node head) {
      if(head==null){
          return null;
      }
      //map中存放的是（原结点，拷贝结点）的映射
      HashMap<Node,Node>map=new HashMap<>();
      for(Node cur=head;cur!=null;cur=cur.next){
          map.put(cur,new Node(cur.val));
      }
//将拷贝的新结点n组值乘一个链表
for(Node cur=head;cur!=null;cur=cur.next){
    map.get(cur).next=map.get(cur.next);
    map.get(cur).random=map.get(cur.random);
}
return map.get(head);
    }
}