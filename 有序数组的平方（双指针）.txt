给你一个按 非递减顺序 排序的整数数组 nums，
返回 每个数字的平方 组成的新数组，要求也按 非递减顺序 排序。

 输入：nums = [-4,-1,0,3,10]
输出：[0,1,9,16,100]
解释：平方后，数组变为 [16,1,0,9,100]
排序后，数组变为 [0,1,9,16,100]

class Solution {
    public int[] sortedSquares(int[] nums) {
int []result=new int[nums.length];
int i=0,j=nums.length-1,k=nums.length-1;
while(k>=0){
if(nums[i]*nums[i]>nums[j]*nums[j]){
    result[k]=nums[i]*nums[i];
    k--;
    i++;
}else{
    result[k]=nums[j]*nums[j];
    k--;
    j--;
}
}
return result;
    }
}